const t=t=>new Promise(e=>setTimeout(()=>e(t),t)),e=t=>console.log(`Resolved after ${t}ms`);document.querySelectorAll(".delay").forEach(a=>{a.addEventListener("click",()=>{a.classList.contains("delay-1")&&t(1e3).then(e),a.classList.contains("delay-1.5")&&t(1500).then(e),a.classList.contains("delay-2")&&t(2e3).then(e)})});let a=[{name:"Mango",active:!0},{name:"Poly",active:!1},{name:"Ajax",active:!0},{name:"Lux",active:!1}];const n=(t,e)=>Promise.resolve(t.map(t=>t.name===e?{...t,active:!t.active}:t)),s=t=>{console.table(t),a=t};document.querySelectorAll(".toggle").forEach(t=>{t.addEventListener("click",()=>{t.classList.contains("toggle-mango")&&n(a,"Mango").then(s),t.classList.contains("toggle-lux")&&n(a,"Lux").then(s)})});const c=(t,e)=>Math.floor(Math.random()*(e-t+1)+t),o=t=>{let e=c(200,500);return new Promise((a,n)=>{setTimeout(()=>{Math.random()>.3?a({id:t.id,time:e}):n(t.id)},e)})},i=({id:t,time:e})=>console.log(`Transaction ${t} processed in ${e}ms`),l=t=>console.warn(`Error processing transaction ${t}. Please try again later.`);document.querySelectorAll(".transaction").forEach(t=>{t.addEventListener("click",()=>{t.classList.contains("transaction-70")&&o({id:70,amount:150}).then(i).catch(l),t.classList.contains("transaction-71")&&o({id:71,amount:230}).then(i).catch(l),t.classList.contains("transaction-72")&&o({id:72,amount:75}).then(i).catch(l),t.classList.contains("transaction-73")&&o({id:73,amount:100}).then(i).catch(l)})});
//# sourceMappingURL=home-work-13.4.2.54e2d8a2.js.map
