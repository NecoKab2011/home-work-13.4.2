{"mappings":"AEAA,MAAM,EAAQ,AAAC,GACb,IAAI,QAAQ,AAAC,GAAY,WAAW,IAAM,EAAQ,GAAK,IACnD,EAAS,AAAC,GAAS,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,EAAK,EAAE,CAAC,EAE/D,SAAS,gBAAgB,CAAC,UAAU,OAAO,CAAC,AAAC,IAC3C,EAAO,gBAAgB,CAAC,QAAS,KAC3B,EAAO,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAM,KAAM,IAAI,CAAC,GACvD,EAAO,SAAS,CAAC,QAAQ,CAAC,cAAc,EAAM,MAAM,IAAI,CAAC,GACzD,EAAO,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAM,KAAM,IAAI,CAAC,EAC7D,EACF,GCVA,IAAI,EAAQ,CACR,CAAE,KAAM,QAAS,OAAQ,CAAA,CAAK,EAC9B,CAAE,KAAM,OAAQ,OAAQ,CAAA,CAAM,EAC9B,CAAE,KAAM,OAAQ,OAAQ,CAAA,CAAK,EAC7B,CAAE,KAAM,MAAO,OAAQ,CAAA,CAAM,EAC9B,CAED,MAAM,EAAkB,CAAC,EAAU,IAC1B,QAAQ,OAAO,CACpB,EAAS,GAAG,CAAC,AAAA,GACX,EAAK,IAAI,GAAK,EAAW,CAAE,GAAG,CAAI,CAAE,OAAQ,CAAC,EAAK,MAAM,AAAC,EAAI,IAK7D,EAAc,AAAA,IAClB,QAAQ,KAAK,CAAC,GACd,EAAQ,CACV,EAEA,SAAS,gBAAgB,CAAC,WAAW,OAAO,CAAC,AAAA,IAC3C,EAAO,gBAAgB,CAAC,QAAS,KAC3B,EAAO,SAAS,CAAC,QAAQ,CAAC,iBAC5B,EAAgB,EAAO,SAAS,IAAI,CAAC,GAEnC,EAAO,SAAS,CAAC,QAAQ,CAAC,eAC5B,EAAgB,EAAO,OAAO,IAAI,CAAC,EAEvC,EACF,GC7BF,MAAM,EAA4B,CAAC,EAAK,IACpC,KAAK,KAAK,CAAC,KAAK,MAAM,GAAM,CAAA,EAAM,EAAM,CAAA,EAAK,GAE3C,EAAkB,AAAA,IACpB,IAAM,EAAQ,EAA0B,IAAK,KAC7C,OAAO,IAAI,QAAQ,CAAC,EAAS,KAC3B,WAAW,KACO,KAAK,MAAM,GAAK,GAG9B,EAAQ,CAAE,GAAI,EAAY,EAAE,CAAE,KAAM,CAAM,GAE1C,EAAO,EAAY,EAAE,CAEzB,EAAG,EACL,EACF,EAEM,EAAa,CAAC,CAAA,GAAE,CAAE,CAAA,KAAE,CAAI,CAAE,GAC9B,QAAQ,GAAG,CAAC,CAAC,YAAY,EAAE,EAAG,cAAc,EAAE,EAAK,EAAE,CAAC,EAElD,EAAW,AAAA,GACf,QAAQ,IAAI,CAAC,CAAC,6BAA6B,EAAE,EAAG,yBAAyB,CAAC,EAI5E,AAFoB,SAAS,gBAAgB,CAAC,gBAElC,OAAO,CAAC,AAAA,IAClB,EAAO,gBAAgB,CAAC,QAAS,KAC3B,EAAO,SAAS,CAAC,QAAQ,CAAC,mBAC5B,EAAgB,CAAE,GAAI,GAAI,OAAQ,GAAI,GAAG,IAAI,CAAC,GAAY,KAAK,CAAC,GAE9D,EAAO,SAAS,CAAC,QAAQ,CAAC,mBAC5B,EAAgB,CAAE,GAAI,GAAI,OAAQ,GAAI,GAAG,IAAI,CAAC,GAAY,KAAK,CAAC,GAE9D,EAAO,SAAS,CAAC,QAAQ,CAAC,mBAC5B,EAAgB,CAAE,GAAI,GAAI,OAAQ,EAAG,GAAG,IAAI,CAAC,GAAY,KAAK,CAAC,GAE7D,EAAO,SAAS,CAAC,QAAQ,CAAC,mBAC5B,EAAgB,CAAE,GAAI,GAAI,OAAQ,GAAI,GAAG,IAAI,CAAC,GAAY,KAAK,CAAC,EAEpE,EACF","sources":["<anon>","src/index.js","src/js/task1.js","src/js/task2.js","src/js/task3.js"],"sourcesContent":["const $b75e1f909f14258e$var$delay = (ms)=>new Promise((resolve)=>setTimeout(()=>resolve(ms), ms));\nconst $b75e1f909f14258e$var$logger = (time)=>console.log(`Resolved after ${time}ms`);\ndocument.querySelectorAll(\".delay\").forEach((button)=>{\n    button.addEventListener(\"click\", ()=>{\n        if (button.classList.contains(\"delay-1\")) $b75e1f909f14258e$var$delay(1000).then($b75e1f909f14258e$var$logger);\n        if (button.classList.contains(\"delay-1.5\")) $b75e1f909f14258e$var$delay(1500).then($b75e1f909f14258e$var$logger);\n        if (button.classList.contains(\"delay-2\")) $b75e1f909f14258e$var$delay(2000).then($b75e1f909f14258e$var$logger);\n    });\n});\n\n\nlet $37d95aab7588d506$var$users = [\n    {\n        name: 'Mango',\n        active: true\n    },\n    {\n        name: 'Poly',\n        active: false\n    },\n    {\n        name: 'Ajax',\n        active: true\n    },\n    {\n        name: 'Lux',\n        active: false\n    }\n];\nconst $37d95aab7588d506$var$toggleUserState = (allUsers, userName)=>{\n    return Promise.resolve(allUsers.map((user)=>user.name === userName ? {\n            ...user,\n            active: !user.active\n        } : user));\n};\nconst $37d95aab7588d506$var$loggerTable = (updatedUsers)=>{\n    console.table(updatedUsers);\n    $37d95aab7588d506$var$users = updatedUsers;\n};\ndocument.querySelectorAll('.toggle').forEach((button)=>{\n    button.addEventListener('click', ()=>{\n        if (button.classList.contains('toggle-mango')) $37d95aab7588d506$var$toggleUserState($37d95aab7588d506$var$users, 'Mango').then($37d95aab7588d506$var$loggerTable);\n        if (button.classList.contains('toggle-lux')) $37d95aab7588d506$var$toggleUserState($37d95aab7588d506$var$users, 'Lux').then($37d95aab7588d506$var$loggerTable);\n    });\n});\n\n\nconst $8d642456c024c10c$var$randomIntegerFromInterval = (min, max)=>Math.floor(Math.random() * (max - min + 1) + min);\nconst $8d642456c024c10c$var$makeTransaction = (transaction)=>{\n    const delay = $8d642456c024c10c$var$randomIntegerFromInterval(200, 500);\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            const success = Math.random() > 0.3;\n            if (success) resolve({\n                id: transaction.id,\n                time: delay\n            });\n            else reject(transaction.id);\n        }, delay);\n    });\n};\nconst $8d642456c024c10c$var$logSuccess = ({ id: id, time: time })=>console.log(`Transaction ${id} processed in ${time}ms`);\nconst $8d642456c024c10c$var$logError = (id)=>console.warn(`Error processing transaction ${id}. Please try again later.`);\nconst $8d642456c024c10c$var$transaction = document.querySelectorAll('.transaction');\n$8d642456c024c10c$var$transaction.forEach((button)=>{\n    button.addEventListener('click', ()=>{\n        if (button.classList.contains('transaction-70')) $8d642456c024c10c$var$makeTransaction({\n            id: 70,\n            amount: 150\n        }).then($8d642456c024c10c$var$logSuccess).catch($8d642456c024c10c$var$logError);\n        if (button.classList.contains('transaction-71')) $8d642456c024c10c$var$makeTransaction({\n            id: 71,\n            amount: 230\n        }).then($8d642456c024c10c$var$logSuccess).catch($8d642456c024c10c$var$logError);\n        if (button.classList.contains('transaction-72')) $8d642456c024c10c$var$makeTransaction({\n            id: 72,\n            amount: 75\n        }).then($8d642456c024c10c$var$logSuccess).catch($8d642456c024c10c$var$logError);\n        if (button.classList.contains('transaction-73')) $8d642456c024c10c$var$makeTransaction({\n            id: 73,\n            amount: 100\n        }).then($8d642456c024c10c$var$logSuccess).catch($8d642456c024c10c$var$logError);\n    });\n});\n\n\n\n\n//# sourceMappingURL=home-work-13.4.2.54e2d8a2.js.map\n","import \"./js/task1\"\r\nimport \"./js/task2\"\r\nimport \"./js/task3\"","const delay = (ms) =>\r\n  new Promise((resolve) => setTimeout(() => resolve(ms), ms));\r\nconst logger = (time) => console.log(`Resolved after ${time}ms`);\r\n\r\ndocument.querySelectorAll(\".delay\").forEach((button) => {\r\n  button.addEventListener(\"click\", () => {\r\n    if (button.classList.contains(\"delay-1\")) delay(1000).then(logger);\r\n    if (button.classList.contains(\"delay-1.5\")) delay(1500).then(logger);\r\n    if (button.classList.contains(\"delay-2\")) delay(2000).then(logger);\r\n  });\r\n});\r\n","let users = [\r\n    { name: 'Mango', active: true },\r\n    { name: 'Poly', active: false },\r\n    { name: 'Ajax', active: true },\r\n    { name: 'Lux', active: false },\r\n  ];\r\n\r\n  const toggleUserState = (allUsers, userName) => {\r\n    return Promise.resolve(\r\n      allUsers.map(user =>\r\n        user.name === userName ? { ...user, active: !user.active } : user\r\n      )\r\n    );\r\n  };\r\n\r\n  const loggerTable = updatedUsers => {\r\n    console.table(updatedUsers);\r\n    users = updatedUsers;\r\n  };\r\n\r\n  document.querySelectorAll('.toggle').forEach(button => {\r\n    button.addEventListener('click', () => {\r\n      if (button.classList.contains('toggle-mango')) {\r\n        toggleUserState(users, 'Mango').then(loggerTable);\r\n      }\r\n      if (button.classList.contains('toggle-lux')) {\r\n        toggleUserState(users, 'Lux').then(loggerTable);\r\n      }\r\n    });\r\n  });","const randomIntegerFromInterval = (min, max) =>\r\n    Math.floor(Math.random() * (max - min + 1) + min);\r\n\r\nconst makeTransaction = transaction => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        const success = Math.random() > 0.3;\r\n  \r\n        if (success) {\r\n          resolve({ id: transaction.id, time: delay });\r\n        } else {\r\n          reject(transaction.id);\r\n        }\r\n      }, delay);\r\n    });\r\n  };\r\n\r\n  const logSuccess = ({ id, time }) =>\r\n    console.log(`Transaction ${id} processed in ${time}ms`);\r\n\r\n  const logError = id =>\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n\r\n  const transaction = document.querySelectorAll('.transaction')\r\n\r\n  transaction.forEach(button => {\r\n    button.addEventListener('click', () => {\r\n      if (button.classList.contains('transaction-70')) {\r\n        makeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\n      }\r\n      if (button.classList.contains('transaction-71')) {\r\n        makeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\n      }\r\n      if (button.classList.contains('transaction-72')) {\r\n        makeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\n      }\r\n      if (button.classList.contains('transaction-73')) {\r\n        makeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\r\n      }\r\n    });\r\n  });"],"names":["$b75e1f909f14258e$var$delay","ms","Promise","resolve","setTimeout","$b75e1f909f14258e$var$logger","time","console","log","document","querySelectorAll","forEach","button","addEventListener","classList","contains","then","$37d95aab7588d506$var$users","name","active","$37d95aab7588d506$var$toggleUserState","allUsers","userName","map","user","$37d95aab7588d506$var$loggerTable","updatedUsers","table","$8d642456c024c10c$var$randomIntegerFromInterval","min","max","Math","floor","random","$8d642456c024c10c$var$makeTransaction","transaction","delay","reject","id","$8d642456c024c10c$var$logSuccess","$8d642456c024c10c$var$logError","warn","$8d642456c024c10c$var$transaction","amount","catch"],"version":3,"file":"home-work-13.4.2.54e2d8a2.js.map"}